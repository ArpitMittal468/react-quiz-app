{"version":3,"sources":["apiDetails.js","App.js","index.js"],"names":["details","Header","className","decodeHTML","html","txt","document","createElement","innerHTML","value","QuestionCard","props","currentNum","ans","checkAndSet","liId","clickedElement","target","id","getElementById","setAttribute","idGiver","push","a","onClick","e","sort","Math","random","questionData","results","length","question","setNewQuestion","setMenu","questionCount","i","Entrys","loadData","api","key","apiDetails","data","fetch","style","textAlign","then","res","json","console","log","components","toUpperCase","innerElements","innerKey","App","useState","menu","setter","ReactDOM","render"],"mappings":"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","file":"static/js/main.c39a68bb.chunk.js","sourcesContent":["const details = {\r\n    \"category\": {\r\n        \"General Knowledge\": 9,\r\n        \"Computers\": 18,\r\n        \"Video Games\": 15,\r\n        \"Science & Nature\":17,\r\n        \"Maths\":19, \r\n        \"Sports\":21,\r\n        \"Animals\":27,\r\n        \"Vehicles\":28\r\n    },\r\n    \"difficulty\": {\r\n        \"Easy\": \"easy\",\r\n        \"Medium\": \"medium\",\r\n        \"Hard\": \"hard\"\r\n    },\r\n    \"amount\": {\r\n        \"5\": 5,\r\n        \"10\": 10,\r\n        \"15\": 15,\r\n        \"20\": 20,\r\n        \"25\": 25,\r\n        \"30\": 30,\r\n        \"35\": 35,\r\n        \"40\": 40,\r\n        \"45\": 45,\r\n        \"50\": 50\r\n    }\r\n}\r\nexport default details;\r\n","import apiDetails from './apiDetails.js';\nimport { useState } from 'react';\n\nfunction Header() {\n  return (\n    <header className=\"Header\">\n      <h1>Quiz App</h1>\n    </header>\n  );\n}\n\nvar decodeHTML = function (html) {\n  var txt = document.createElement('textarea');\n  txt.innerHTML = html;\n  return txt.value;\n};\n\n\nfunction QuestionCard(props, currentNum) {\n  // console.log(props);\n  let ans = [];\n\n  function checkAndSet(liId) {\n    const clickedElement = liId.target.id;\n    const userAnswer = document.getElementById(clickedElement).innerHTML;\n    if (userAnswer === props['correct_answer'])\n      document.getElementById(clickedElement).setAttribute('class', 'correct');\n    else document.getElementById(clickedElement).setAttribute('class', 'wrong');\n  }\n\n  let idGiver = 1;\n  props['incorrect_answers'].push(props['correct_answer']);\n  for (const a of props['incorrect_answers']) {\n    ans.push(<li id={\"li-\" + idGiver} onClick={(e) => checkAndSet(e)} className=\"defualtLi\">{decodeHTML(a)}</li>);\n    idGiver++;\n  }\n\n  // ans.push(<li id = {\"li-\"+idGiver} onClick={checkAndSet}>{props['correct_answer']}</li>);\n  ans.sort(() => Math.random() - 0.5);\n\n  return (<>\n    <section className=\"Card\">\n      <section className=\"question\">\n        <p><u>Question:</u> {currentNum}/{questionData.results.length}</p>\n        <p>{decodeHTML(props.question)}</p>\n      </section>\n      <section className=\"answer\">\n\n        {ans}\n\n      </section>\n    </section>\n    <button className=\"nextButton\" onClick={setNewQuestion}>Next Question</button>\n  </>\n  );\n}\n\nlet questionData = {};\n\nlet questionCount = 0;\n\nasync function setNewQuestion() {\n  // console.log(questionData);\n  if (questionCount < questionData['results'].length) {\n    await setMenu(QuestionCard(questionData['results'][questionCount], questionCount + 1));\n    // console.log('--------------');\n    for (let i = 1; i <= questionData['results'][questionCount]['incorrect_answers'].length; i++) {\n      let ele = document.getElementById('li-' + i);\n      // console.log(ele);\n      ele.setAttribute('class', 'defualtLi');\n    }\n    questionCount++;\n  }\n  else {\n    questionCount = 0;\n    setMenu(Entrys());\n  }\n}\n\nfunction Loading(){\n  return (\n    <>\n    <section className=\"EntryCard\">\n      <section className=\"entry\">\n      <h1 style={{textAlign:'center'}}>Loading Quiz Data ...</h1>\n      </section>\n    </section>\n    </>\n  );\n}\n\nfunction loadData() {\n  // console.log(\"here\");\n  let api = \"https://opentdb.com/api.php?\";\n  for (const key in apiDetails) {\n    let val = document.getElementById(key + '-id').value;\n    // console.log(val);\n    api = api + key + \"=\" + val + \"&\";\n  }\n  // console.log(api);\n  const data = fetch(api);\n  setMenu(Loading());\n  data.then(res => res.json()).then(\n    res => {\n      questionData = res;\n      console.log(res);\n      setNewQuestion();\n    }\n  );\n}\n\nfunction Entrys() {\n\n  let components = [];\n\n  for (const key in apiDetails) {\n    components.push(<p>{key.toUpperCase()}</p>);\n    let innerElements = [];\n    for (const innerKey in apiDetails[key])\n      innerElements.push(<option value={apiDetails[key][innerKey]}>{innerKey}</option>);\n    components.push(<select id={key + \"-id\"} className=\"selectTag\">{innerElements}</select>);\n\n  }\n  return (\n    <section className=\"EntryCard\">\n      <section className=\"entry\">\n        <p>Choose Entities: </p>\n        {components}\n        <br />\n        <button className=\"bttn1\" onClick={loadData}>Start Quiz</button>\n      </section>\n    </section>);\n}\n\n\n// let menu;\nlet setMenu;\n\n\nfunction App() {\n  // menu = Entrys();\n  // QuestionCard({ 'question': \"dfd\", \"correct_answer\": \"afasd\", \"incorrect_answers\": [\"a\", \"b\"] })\n  let [menu, setter] = useState(Entrys());\n  setMenu = setter;\n\n  return (\n    <>\n      <Header />\n      {menu}\n    </>\n  );\n}\n\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n// import reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <>\n    <App />\n  </>,\n  document.getElementById('root')\n);\n\n// // If you want to start measuring performance in your app, pass a function\n// // to log results (for example: reportWebVitals(console.log))\n// // or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}